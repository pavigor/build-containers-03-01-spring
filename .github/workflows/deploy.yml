name: Build and deploy
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: 'Install PostgreSQL client'
        run: |
          docker ps -a
#          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
#          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
          sudo apt-get update
          sudo apt-get install --yes postgresql-client
#          docker version
#          docker buildx version
#          docker start $(docker ps -a -q)
#          sleep 60
#          docker ps

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: 'Checkout the repo'
        uses: actions/checkout@v3

      - name: 'Setup cache'
        id: cache-maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-build-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys:
            ${{ runner.os }}-build-maven-

      - if: ${{ steps.cache-maven.outputs.cache-hit != 'true' }}
        name: 'Create dir for maven cache'
        continue-on-error: true
        run: |
          mkdir ~/.m2

      - name: 'Setup database'
        run: | 
          psql -f docker-entrypoint-initdb.d/00_schema.sql postgresql://app:pass@localhost:5432/db
          psql -f docker-entrypoint-initdb.d/01_data.sql postgresql://app:pass@localhost:5432/db

      - name: 'Set tag'
        run: echo "BUILD_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: 'Login to GHCR'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: 'Build image '
        run: |
          mkdir .m2
          ls -la
          pwd
          echo "Exec build"
          docker buildx build .  --build-arg CACHE_DIR=.m2 --network host --tag ghcr.io/${{ github.actor }}/03-01-spring:${BUILD_TAG} --tag ghcr.io/${{ github.actor }}/03-01-spring:latest
          docker push ghcr.io/${{ github.actor }}/03-01-spring:${BUILD_TAG}
          docker push ghcr.io/${{ github.actor }}/03-01-spring:latest
